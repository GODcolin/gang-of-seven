<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--namespace：命名空间，是用于绑定Dao接口的，即面向接口编程，必须写为被绑定接口的全类名-->
<mapper namespace="com.nyanner.govii.elementary.mapper.KnowledgeMapper">

    <sql id="selectKnowledgeVo">
        select id,
               title,
               author_id,
               create_time,
               life_time,
               content,
               category_id,
               view_counts,
               is_delete,
               status,
               like_counts,
               dislike_counts,
               comment_counts,
               collect_counts,
               source_id,
               master_id
        from knowledge

    </sql>

    <select id="selectHotKnowledge" parameterType="Integer"
            resultType="com.nyanner.govii.elementary.model.bean.KnowledgeIdAndTitle">
        select id, title
        from knowledge
        where is_delete = '0'
          and status = '2'
          and version = 'C'
          and TIMESTAMPDIFF(DAY, create_time, CURRENT_TIMESTAMP) &lt; #{days}
        order by view_counts desc
        limit #{limit}
    </select>

    <select id="selectKnowledgeByLikes" parameterType="Integer"
            resultType="com.nyanner.govii.elementary.model.bean.KnowledgeIdAndTitle">
        select id, title
        from knowledge
        where is_delete = '0'
          and status = '2'
          and version = 'C'
          and TIMESTAMPDIFF(DAY, create_time, CURRENT_TIMESTAMP) &lt; #{days}
        order by like_counts desc
        limit #{limit}
    </select>

    <select id="selectKnowledgeByCollect" parameterType="Integer"
            resultType="com.nyanner.govii.elementary.model.bean.KnowledgeIdAndTitle">
        select id, title
        from knowledge
        where is_delete = '0'
          and status = '2'
          and version = 'C'
          and TIMESTAMPDIFF(DAY, create_time, CURRENT_TIMESTAMP) &lt; #{days}
        order by collect_counts desc
        limit #{limit}
    </select>

    <select id="selectNewKnowledge" parameterType="Integer"
            resultType="com.nyanner.govii.elementary.model.bean.KnowledgeIdAndTitleAndTime">
        select id, title, create_time
        from knowledge
        where is_delete = '0'
          and status = '2'
          and version = 'C'
        order by create_time desc
        limit #{limit}
    </select>

    <resultMap id="searchKnowledgeResult" type="com.nyanner.govii.elementary.model.bean.SearchKnowledge">
        <id property="id" column="id"></id>
        <result property="title" column="title"></result>
        <result property="createTime" column="create_time"></result>
        <result property="content" column="content"></result>
        <result property="likeCounts" column="like_counts"></result>
        <result property="viewCounts" column="view_counts"></result>
        <result property="dislikeCounts" column="dislike_counts"></result>
        <result property="commentCounts" column="comment_counts"></result>
        <result property="collectCounts" column="collect_counts"></result>

        <association property="author" javaType="com.nyanner.govii.elementary.model.bean.Author">
            <id property="authorId" column="user_id"/>
            <result property="authorName" column="nick_name"/>
        </association>

        <collection property="keyWords" column="id"
                    select="com.nyanner.govii.elementary.mapper.TagMapper.findTagsByKnowledgeId"/>

    </resultMap>

    <select id="searchKnowledgeInfo" resultMap="searchKnowledgeResult">
        select k.id,
               k.title,
               k.create_time,
               k.content,
               k.view_counts,
               k.like_counts,
               k.dislike_counts,
               k.comment_counts,
               k.collect_counts,
               u.user_id,
               u.nick_name
        from knowledge k
                 left join sys_user u on k.author_id = u.user_id
        where k.is_delete = '0'
          and k.status = '2'
          and (title like concat('%', #{msg}, '%') or content like concat('%', #{msg}, '%'))
          and version = 'C'
        order by k.view_counts desc
    </select>


    <resultMap id="knowledgeResult" type="com.nyanner.govii.elementary.entity.knowledge.Knowledge">
        <id property="id" column="id"></id>
        <result property="title" column="title"></result>
        <result property="createTime" column="create_time"></result>
        <result property="lifeTime" column="life_time"></result>
        <result property="content" column="content"></result>
        <result property="viewCounts" column="view_counts"></result>
        <result property="likeCounts" column="like_counts"></result>
        <result property="dislikeCounts" column="dislike_counts"></result>
        <result property="commentCounts" column="comment_counts"></result>
        <result property="collectCounts" column="collect_counts"></result>
        <result property="masterId" column="master_id"></result>

        <association property="user" javaType="com.nyanner.govii.elementary.model.bean.Author">
            <id property="authorId" column="user_id"></id>
            <result property="authorName" column="nick_name"></result>
        </association>

        <association property="category" javaType="com.nyanner.govii.elementary.entity.knowledge.Category">
            <id property="id" column="category_id"></id>
            <result property="categoryName" column="category_name"></result>
        </association>

        <association property="source" javaType="com.nyanner.govii.elementary.entity.knowledge.Source">
            <id property="id" column="source_id"></id>
            <result property="name" column="source_name"></result>
        </association>

        <collection property="tags" column="id"
                    select="com.nyanner.govii.elementary.mapper.TagMapper.findTagsByKnowledgeId"></collection>

        <collection property="depts" column="id"
                    select="com.nyanner.govii.elementary.mapper.SysDeptMapper.selectByKnowledgeId"></collection>
    </resultMap>

    <select id="selectKnowledgeDetailsByKnowledgeId" parameterType="Long" resultMap="knowledgeResult">
        select k.id,
               k.title,
               k.create_time,
               k.life_time,
               k.content,
               k.view_counts,
               k.like_counts,
               k.dislike_counts,
               k.comment_counts,
               k.collect_counts,
               k.master_id,
               u.user_id,
               u.nick_name,
               c.id   as category_id,
               c.category_name,
               s.id   as source_id
                ,
               s.name as source_name,
               k.life_time
        from knowledge k
                 left join sys_user u on k.author_id = u.user_id
                 left join category c on c.id = k.category_id
                 left join source s on k.source_id = s.id
        where k.id = #{knowledgeId}
    </select>

    <select id="findAll" resultMap="knowledgeResult">
        select k.id
             , k.title
             , k.create_time
             , k.content
             , k.view_counts
             , k.like_counts
             , k.dislike_counts
             , k.comment_counts
             , k.collect_counts
             , k.master_id u.user_id,u.nick_name
             , c.id   as category_id
             , c.category_name
             , s.id   as source_id
             , s.name as source_name
        from knowledge k
                 left join sys_user u on k.author_id = u.user_id
                 left join category c on c.id = k.category_id
                 left join source s on k.source_id = s.id
    </select>


    <insert id="addKnowledge" parameterType="Knowledge" useGeneratedKeys="true" keyProperty="id">
        insert into knowledge(
        <if test="lifeTime != null">life_time,</if>
        <if test="category != null and category.id != null and category.id != ''">category_id,</if>
        <if test="source != null and source.id!= null and source.id != ''">source_id,</if>
        title,author_id,content,master_id,status
        )values(
        <if test="lifeTime != null">#{lifeTime},</if>
        <if test="category != null and category.id != null and category.id != ''">#{category.id},</if>
        <if test="source != null and source.id != null and source.id != ''">#{source.id},</if>
        #{title},#{authorId},#{content},#{masterId},#{status}
        )

    </insert>

    <select id="selectKnowledgeByUser" resultType="com.nyanner.govii.elementary.model.bean.IndividualKnowledge">
        select k.id as knowledgeId,k.title,c.category_name,k.view_counts,k.create_time,k.status
        from knowledge k left join category c on k.category_id = c.id
        where k.is_delete = 0 and author_id = #{userId}
        <if test="status != null and status != ''">
            and status = #{status}
        </if>
        order by k.create_time desc
    </select>

    <resultMap id="auditingKnowledgeResult" type="com.nyanner.govii.elementary.model.bean.KnowledgeAudit">
        <id property="id" column="id"></id>
        <result property="title" column="title"></result>
        <result property="author" column="nick_name"></result>
        <result property="createTime" column="create_time"></result>
        <association property="category" javaType="com.nyanner.govii.elementary.entity.knowledge.Category">
            <id property="id" column="category_id"></id>
            <result property="categoryName" column="category_name"></result>
        </association>
    </resultMap>

    <select id="selectAuditingKnowledge" resultMap="auditingKnowledgeResult">
        select k.id, u.nick_name, k.title, c.id as category_id, c.category_name, k.create_time
        from knowledge k
                 left join sys_user u on k.author_id = u.user_id
                 left join category c on c.id = k.category_id
        where k.is_delete = '0'
          and k.status = '1'
        order by k.create_time desc

    </select>

    <update id="updateKnowledgeVersion" parameterType="Long">
        update knowledge
        set version = 'A'
        where master_id = #{masterId}
          and version = 'C'
    </update>

    <update id="updateKnowledgeStatusById">
        update knowledge k
        set k.status = #{status}
        where id = #{knowledgeId};
    </update>

    <select id="selectKnowledgeVersions" resultMap="searchKnowledgeResult">
        select k.id,
               k.title,
               k.create_time,
               k.content,
               k.view_counts,
               k.like_counts,
               k.dislike_counts,
               k.comment_counts,
               k.collect_counts,
               u.user_id,
               u.nick_name
        from knowledge k
                 left join sys_user u on k.author_id = u.user_id
        where k.is_delete = '0'
          and k.status = '2'
          and k.version = 'A'
          and k.master_id = #{masterId}
        order by k.create_time desc
    </select>

    <select id="selectKnowledgeByCategoryId" resultMap="searchKnowledgeResult">
        select k.id,
               k.title,
               k.create_time,
               k.content,
               k.view_counts,
               k.like_counts,
               k.dislike_counts,
               k.comment_counts,
               k.collect_counts,
               u.user_id,
               u.nick_name
        from knowledge k
                 left join sys_user u on k.author_id = u.user_id
        where k.is_delete = '0'
          and k.status = '2'
          and k.version = 'C'
          and k.category_id = #{categoryId}
        order by k.create_time desc
    </select>


    <delete id="delKnowledge" parameterType="Long">
        delete
        from knowledge
        where id = #{id}
    </delete>

    <update id="updateKnowledgeStatus" parameterType="String">
        update knowledge
        set status = #{status}
        where id = #{knowledgeId}
    </update>

    <update id="offlineKnowledge" parameterType="Long">
        update knowledge
        set is_delete = 1
        where id = #{knowledgeId}
    </update>

    <update id="updateViewCounts">
        update knowledge
        set view_counts += 1
        where knowledge_id = #{knowledgeId}
    </update>

    <update id="updateLikeCounts">
        update knowledge
        set like_counts += #{num}
        where knowledge_id = #{knowledgeId}
    </update>

    <update id="updateDislikeCounts">
        update knowledge
        set dislike_counts += #{num}
        where knowledge_id = #{knowledgeId}
    </update>


    <update id="updateCommentCounts">
        update knowledge
        set comment_counts += #{num}
        where knowledge_id = #{knowledgeId}
    </update>


    <select id="advancedSearchKnowledge" parameterType="com.nyanner.govii.elementary.model.bean.KnowledgeParams"
            resultMap="searchKnowledgeResult">
        select k.id,k.title,k.create_time,k.content,k.view_counts,
        k.like_counts,k.dislike_counts,k.comment_counts,k.collect_counts,
        u.user_id,u.nick_name
        from knowledge k left join sys_user u on k.author_id = u.user_id
        left join category c on k.category_id = c.id
        left join knowledge_tag kt on kt.knowledge_id = k.id
        left join tag t on kt.tag_id = t.id
        where k.is_delete = '0' and k.status = '2' and k.version = 'C'
        <if test="title != null and title != ''">
            AND (k.title like concat('%',#{title},'%') or k.content like concat('%',#{title},'%'))
        </if>
        <if test="keyWords != null and keyWords != ''">
            AND t.tag_name like concat('%',#{keyWords},'%')
        </if>
        <if test="category != null and category != ''">
            AND c.category_name like concat('%',#{category},'%')
        </if>
        <if test="author != null and author != ''">
            AND u.nick_name like concat('%',#{author},'%')
        </if>
        <if test="beginTime != null"><!-- 开始时间检索 -->
            AND date_format(k.create_time,'%y%m%d') &gt;= date_format(#{beginTime},'%y%m%d')
        </if>
        <if test="endTime != null"><!-- 结束时间检索 -->
            AND date_format(k.create_time,'%y%m%d') &lt;= date_format(#{endTime},'%y%m%d')
        </if>
        order by k.view_time desc
    </select>


    <select id="selectAuditedKnowledge" resultMap="auditingKnowledgeResult">
        select k.id,u.nick_name,k.title,c.id as category_id,c.category_name,k.create_time
        from knowledge k left join sys_user u on k.author_id = u.user_id
        left join category c on c.id = k.category_id
        where k.is_delete = '0' and k.status = '2' and k.version = 'C' and k.author_id = #{userId}
        <if test="title != null and title != ''">
            AND k.title = #{title}
        </if>
        order by k.create_time desc
    </select>


    <select id="selectRandomKnowledge" resultType="com.nyanner.govii.elementary.model.bean.SearchKnowledge">
        select k.id,
               k.title,
               k.create_time,
               k.content,
               k.view_counts,
               k.like_counts,
               k.dislike_counts,
               k.comment_counts,
               k.collect_counts,
               u.user_id,
               u.nick_name
        from knowledge k
                 left join sys_user u on k.author_id = u.user_id
        where k.is_delete = '0'
          and k.status = '2'
          and version = 'C'
        order by rand()
        limit #{limit}
    </select>


    <select id="shareKnowledgeById"
            resultType="com.nyanner.govii.elementary.model.bean.KnowledgeIdAndTitleAndContent">
        select id, title, content
        from knowledge
        where is_delete = '0'
          and status = '2'
          and id = #{knowledgeId}
    </select>

    <select id="selectKnowledgeTitleAndContentById"
            resultType="com.nyanner.govii.elementary.model.bean.KnowledgeIdAndTitleAndContent">
        select id, title, content
        from knowledge
        where id = #{knowledgeId}
    </select>


    <resultMap id="knowledgeManageResult" type="com.nyanner.govii.elementary.model.bean.KnowledgeManageInfo">
        <id property="id" column="id"></id>
        <result property="title" column="title"></result>
        <result property="author" column="author_name"></result>
        <result property="createTime" column="create_time"></result>
        <result property="lifeTime" column="life_time"></result>
        <result property="isDelete" column="is_delete"></result>
        <result property="status" column="status"></result>
        <result property="version" column="version"></result>
        <result property="auditor" column="auditor"></result>
        <result property="auditTime" column="auditTime"></result>
    </resultMap>
    <select id="selectKnowledgeManageInfo" parameterType="com.nyanner.govii.elementary.model.bean.KnowledgeManageInfo"
            resultMap="knowledgeManageResult">
        select k.id,
                        k.title,
                        k.create_time,
                        k.life_time,
                        k.is_delete,
                        k.status,
                        k.version,
                        u1.nick_name as author_name,
                        u2.nick_name as auditor,
                        ka.process_time
        from knowledge k
                 left join sys_user u1 on k.author_id = u1.user_id
                 left join knowledge_audit ka on k.id = ka.knowledge_id
                 left join sys_user u2 on u2.user_id = ka.reviewer_id
    </select>


    <update id="updateKnowledge" parameterType="Knowledge">
        update knowledge
        <set>
            <if test="title != null and title != ''">title = #{title},</if>
            <if test="content != null and content != ''">content = #{content},</if>
            <if test="status != null and status != ''">status = #{status},</if>
            <if test="lifeTime != null">life_time = #{lifeTime},</if>
            <if test="category != null and category.id != null and category.id != ''">category_id = #{category.id},</if>
            <if test="source != null and source.id != null and source.id != ''">source_id = #{source.id},</if>
            create_time = sysdate()
        </set>
        where id = #{id}
    </update>

    <select id="selectRandomKnowledgeByCategoryId" resultType="com.nyanner.govii.elementary.model.bean.SearchKnowledge">
        select k.id,
               k.title,
               k.create_time,
               k.content,
               k.view_counts,
               k.like_counts,
               k.dislike_counts,
               k.comment_counts,
               k.collect_counts,
               u.user_id,
               u.nick_name
        from knowledge k
                 left join sys_user u on k.author_id = u.user_id
        where k.is_delete = '0'
          and k.status = '2'
          and version = 'C'
          and k.category_id = #{categoryId}
        order by rand()
            limit 1
    </select>

</mapper>
















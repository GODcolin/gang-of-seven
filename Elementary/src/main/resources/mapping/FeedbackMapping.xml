<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--namespace：命名空间，是用于绑定Dao接口的，即面向接口编程，必须写为被绑定接口的全类名-->
<mapper namespace="com.nyanner.govii.elementary.mapper.FeedbackMapper">

    <insert id="addFeedback" parameterType="Feedback">
        insert into feedback(knowledge_id,
                             user_id, content, type)
        values (#{knowledgeId},
                #{userId}, #{content}, #{type})

    </insert>


    <resultMap id="ProcessingFeedbackResult" type="Feedback">

        <id property="id" column="id"></id>
        <result property="content" column="content"></result>
        <result property="feedbackTime" column="feedback_time"></result>
        <result property="type" column="type"></result>

        <association property="user" javaType="com.nyanner.govii.elementary.model.bean.User">
            <id property="userId" column="user_id"></id>
            <result property="userName" column="nick_name"></result>
        </association>

        <association property="knowledge" javaType="com.nyanner.govii.elementary.model.bean.KnowledgeIdAndTitle">
            <id property="id" column="knowledge_id"></id>
            <result property="title" column="knowledge_title"></result>
        </association>
    </resultMap>

    <select id="selectProcessingFeedback" resultMap="ProcessingFeedbackResult">
        select f.id,
               f.content,
               f.feedback_time,
               f.type,
               u.user_id,
               u.nick_name,
               k.id    as knowledge_id,
               k.title as knowledge_title
        from feedback f
                 left join sys_user u on f.user_id = u.user_id
                 left join knowledge k on k.id = f.knowledge_id
        where f.status = '0'
        order by f.feedback_time desc
    </select>

    <update id="updateFeedbackWhenProcess" parameterType="Feedback">
        update feedback set
        <if test="reason != null and reason != ''">reason = #{reason},</if>
        status = #{status},handler_id = #{handlerId}
        where id = #{id}
    </update>


    <resultMap id="FeedbackResult" type="Feedback">

        <id property="id" column="id"></id>
        <result property="content" column="content"></result>
        <result property="feedbackTime" column="feedback_time"></result>
        <result property="status" column="status"></result>
        <result property="reason" column="reason"></result>

        <association property="handler" javaType="com.nyanner.govii.elementary.model.bean.User">
            <id property="userId" column="user_id"></id>
            <result property="userName" column="nick_name"></result>
        </association>

        <association property="knowledge" javaType="com.nyanner.govii.elementary.model.bean.KnowledgeIdAndTitle">
            <id property="id" column="knowledge_id"></id>
            <result property="title" column="knowledge_title"></result>
        </association>
    </resultMap>
    <select id="selectFeedbackByUserId" resultMap="FeedbackResult">
        select f.id,
               f.content,
               f.feedback_time,
               f.status,
               f.type,
               f.reason,
               u.user_id,
               u.nick_name,
               k.id    as knowledge_id,
               k.title as knowledge_title
        from feedback f
                 left join sys_user u on f.user_id = u.user_id
                 left join knowledge k on k.id = f.knowledge_id
        where u.user_id = #{userId}
        order by f.feedback_time desc
    </select>
</mapper>



















